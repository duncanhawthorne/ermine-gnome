
# Set GtkSettings color scheme property.
# This can be overriden (via an xsetting) with eg. the gnome-appearance-properties.
#gtk_color_scheme = "fg_color:#000\nbg_color:#f4f4f4\nbase_color:#f4f4f4\ntext_color:#1A1A1A\nselected_bg_color:#86ABD9\nselected_fg_color:#F4F4F4\ntooltip_bg_color:#f4f4f4\ntooltip_fg_color:#000"

include "iconrc"
gtk_color_scheme = "fg_color:#000\nbg_color:#f4f4f4\nbase_color:#f4f4f4\ntext_color:#1A1A1A\nselected_bg_color:#86ABD9\nselected_fg_color:#F4F4F4\ntooltip_bg_color:#f4f4f4\ntooltip_fg_color:#000"
#
#
#
style "clearlooks-default"
{
	########
	# Style Properties
	########
	GtkButton      ::child-displacement-x = 1
	GtkButton      ::child-displacement-y = 1
	GtkButton      ::default-border       = { 0, 0, 0, 0 }
	GtkCheckButton ::indicator-size       = 10

	GtkPaned       ::handle-size          = 6

	GtkRange       ::trough-border        = 0
	GtkRange       ::slider-width         = 6
	GtkRange       ::stepper-size         = 0

	GtkScale       ::slider-length        = 23
	GtkScale       ::trough-side-details  = 0
	#GtkScrollbar   ::min-slider-length    = 13

	GtkMenuBar     ::internal-padding     = 0
	GtkExpander    ::expander-size        = 16
	GtkToolbar     ::internal-padding     = 0
	GtkTreeView    ::expander-size        = 14
	GtkTreeView    ::vertical-separator   = 0

	GtkMenu        ::horizontal-padding   = 0
	GtkMenu        ::vertical-padding     = 0

	# Glow the tasklist by changing the color, instead of overlaying it with a rectangle
	WnckTasklist   ::fade-overlay-rect    = 0

	xthickness = 0
	ythickness = 0


	fg[NORMAL]        = @fg_color
	fg[PRELIGHT]      = @fg_color
	fg[SELECTED]      = @selected_fg_color
	fg[ACTIVE]        = @fg_color
	fg[INSENSITIVE]   = darker (@bg_color)

	bg[NORMAL]        = @bg_color
	bg[PRELIGHT]      = shade (1.02, @bg_color)
	bg[SELECTED]	  = @selected_bg_color #was selected background selected_bg
	bg[INSENSITIVE]   = @bg_color
	bg[ACTIVE]        = shade (0.9, @bg_color)

	base[NORMAL]      = @base_color
	base[PRELIGHT]    = shade (0.95, @bg_color)
	base[ACTIVE]      = shade (0.9, @selected_bg_color)
	base[SELECTED]    = @selected_bg_color
	base[INSENSITIVE] = @bg_color

	text[NORMAL]      = @text_color
	text[PRELIGHT]    = @text_color
	text[ACTIVE]      = @selected_fg_color
	text[SELECTED]    = @selected_fg_color
	text[INSENSITIVE] = darker (@bg_color)

	engine "clearlooks" 
	{
		colorize_scrollbar = FALSE
		menubarstyle      = 0      # 0 = flat, 1 = sunken, 2 = flat gradient
		toolbarstyle      = 1      # 0 = flat, 1 = enable effects
		animation         = FALSE
		style             = CLASSIC
	}
}

style "clearlooks-wide"
{
	xthickness = 0
	ythickness = 0
}

style "clearlooks-wider"
{
	xthickness = 0
	ythickness = 0
}

style "clearlooks-button"
{
	xthickness   = 0
	ythickness   = 0

	bg[NORMAL]   = @bg_color # "#f6f4f1"
	bg[PRELIGHT] = shade (1.06, @bg_color)
	bg[ACTIVE]   = @bg_color
}

style "clearlooks-notebook"
{
	xthickness = 0
	ythickness = 0

	bg[NORMAL] = @bg_color
}

style "clearlooks-tasklist"
{
	xthickness = 0
	ythickness = 0
}

style "clearlooks-menu"
{
	xthickness = 0
	ythickness = 0

	bg[NORMAL] = @bg_color

	# Radius of the menu items (inside menus)
	engine "clearlooks" {
		radius = 0.0
	}
}

style "clearlooks-menu-item"
{
	xthickness = 0
	ythickness = 0

	fg[PRELIGHT] = @selected_fg_color

	# Work around for http://bugzilla.gnome.org/show_bug.cgi?id=382646
	text[NORMAL]       = @fg_color
	text[PRELIGHT]     = @selected_fg_color
	text[SELECTED]     = @selected_fg_color
	text[ACTIVE]       = @fg_color
	text[INSENSITIVE]  = darker (@bg_color)
}

# Based on the default style so that the colors from the button
# style are overriden again.
style "clearlooks-treeview-header" = "clearlooks-default"
{
	xthickness = 0
	ythickness = 0
}

style "clearlooks-frame-title"
{
	fg[NORMAL] = lighter (@fg_color)
}

style "clearlooks-tooltips"
{
	xthickness = 0
	ythickness = 0

	bg[NORMAL] = @tooltip_bg_color
	fg[NORMAL] = @tooltip_fg_color
}

style "clearlooks-progressbar"
{
	xthickness = 0
	ythickness = 0

	fg[PRELIGHT] = @selected_fg_color
}

style "clearlooks-nautilus-location" {
	bg[NORMAL] = @bg_color
}


#########################################
# Matches
#########################################

# Clearlooks default style is applied to every widget
class "GtkWidget"    style "clearlooks-default"

# Increase the x/ythickness in some widgets
#class "GtkToolbar"   style "clearlooks-default" 
#class "GtkRange"     style "clearlooks-wide"
#class "GtkFrame"     style "clearlooks-wide"
#class "GtkSeparator" style "clearlooks-wide"
#class "GtkEntry"     style "clearlooks-wider"

# General matching following, the order is choosen so that the right styles override each other
# eg. progressbar needs to be more important then the menu match.

widget_class "*<GtkButton>"      style "clearlooks-button"
widget_class "*<GtkNotebook>"    style "clearlooks-notebook"
widget_class "*<GtkProgressBar>" style "clearlooks-progressbar"

widget_class "*<GtkMenu>*"       style "clearlooks-menu"
widget_class "*<GtkMenuItem>*"      style "clearlooks-menu-item"

widget_class "*.<GtkFrame>.<GtkLabel>" style "clearlooks-frame-title"

# Treeview header
widget_class "*.<GtkTreeView>.<GtkButton>" style "clearlooks-treeview-header"
widget_class "*.<GtkCTree>.<GtkButton>"    style "clearlooks-treeview-header"
widget_class "*.<GtkList>.<GtkButton>"     style "clearlooks-treeview-header"
widget_class "*.<GtkCList>.<GtkButton>"    style "clearlooks-treeview-header"

# The window of the tooltip is called "gtk-tooltip"
################################
# FIXME:
# This will not work if one embeds eg. a button into the tooltip.
# As far as I can tell right now we will need to rework the theme
# quite a bit to get this working correctly.
# (It will involve setting different priorities, etc.)
################################
widget "gtk-tooltip*" style "clearlooks-tooltips"



###################################################
# Special cases and work arounds
###################################################

# Special case the nautilus-extra-view-widget
# ToDo: A more generic approach for all applications that have a widget like this.
widget "*.nautilus-extra-view-widget" style : highest "clearlooks-nautilus-location"

# Work around for http://bugzilla.gnome.org/show_bug.cgi?id=382646
# Note that the work around assumes that the combobox is _not_ in
# appears-as-list mode.
# Similar hack also in the menuitem style.
style "clearlooks-combobox-text-color-workaround"
{
	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}
widget_class "*.GtkComboBox"   style "clearlooks-combobox-text-color-workaround"

#hacky:

style "clearlooks-scrollbar" = "clearlooks-default"

{
	
	

    GtkRange::trough_border = 0
    GtkRange::slider_width = 6


    GtkRange::stepper_size = 0

    GtkScrollbar::min_slider_length = 30
  
    engine "pixmap" 
    {
 	
        #The trough for vertical scrollbars. This is the region in which the slider moves.
	image 
	{
            function        = BOX
            recolorable     = TRUE
            detail          = "trough"
            file            = "vertical_trough.png"
            border          = { 0, 0, 30, 30 }
            stretch         = TRUE
            orientation     = VERTICAL
        }

	#The trough for horizontal scrollbars.
        image 
	{
            function        = BOX
            recolorable     = TRUE
            detail          = "trough"
            file            = "horizontal_trough.png"
            border          = { 30, 30, 0, 0 }
            stretch         = TRUE
            orientation     = HORIZONTAL
        }

	#The image used to draw the slider for horizontal scrollbars
	#in the NORMAL state.
        image 
	{
            function        = SLIDER
            recolorable     = TRUE
            state           = NORMAL
            file            = "scrollbar_horizontal.png"
            border          = { 6, 6, 6, 6 }
            stretch         = TRUE
            orientation     = HORIZONTAL
        }

	#The image used to draw the slider for horizontal scrollbars
	#in their prelight state.
        image 
	{
            function        = SLIDER 
            recolorable     = TRUE
            state           = PRELIGHT
            file            = "scrollbar_prelight_horizontal.png"
            border          = { 6, 6, 6, 6 }
            stretch         = TRUE
            orientation     = HORIZONTAL
        }

	#The image used to draw the slider for horizontal scrollbars
	#in their ACTIVE (pressed?) state.
        image 
	{
            function        = SLIDER 
            recolorable     = TRUE
            state           = ACTIVE
            file            = "scrollbar_horizontal.png"
            border          = { 6, 6, 6, 6 }
            stretch         = TRUE
            orientation     = HORIZONTAL
        }

	#The image used to draw the slider for horizontal scrollbars
	#in their INSENSITIVE state.
        image 
	{
            function        = SLIDER 
            recolorable     = TRUE
            state           = INSENSITIVE
            file            = "scrollbar_horizontal.png"
            border          = { 6, 6, 6, 6 }
            stretch         = TRUE
            orientation     = HORIZONTAL
        }

	#The image used to draw the slider for vertical scrollbars
	#in their NORMAL state.
        image 
	{
            function        = SLIDER
            recolorable     = TRUE
            state           = NORMAL
            file            = "scrollbar_vertical.png"
            border          = { 6, 6, 6, 6 }
            stretch         = TRUE
            orientation     = VERTICAL
        }

	#The image used to draw the slider for vertical scrollbars
	#in their prelight state.
        image 
	{
            function        = SLIDER 
            recolorable     = TRUE
            state           = PRELIGHT
            file            = "scrollbar_prelight_vertical.png"
            border          = { 6, 6, 6, 6 }
            stretch         = TRUE
            orientation     = VERTICAL
        }

	#The image used to draw the slider for vertical scrollbars
	#in their ACTIVE state.
        image 
	{
            function        = SLIDER 
            recolorable     = TRUE
            state           = ACTIVE
            file            = "scrollbar_vertical.png"
            border          = { 6, 6, 6, 6 }
            stretch         = TRUE
            orientation     = VERTICAL
        }

	#The image used to draw the slider for vertical scrollbars
	#in their INSENSITIVE state.
        image 
	{
            function        = SLIDER 
            recolorable     = TRUE
            state           = INSENSITIVE
            file            = "scrollbar_vertical.png"
            border          = { 6, 6, 6, 6 }
            stretch         = TRUE
            orientation     = VERTICAL
        }

        image 
	{
            function        = BOX
            recolorable     = TRUE
            state           = NORMAL 
            file            = "bottom.png"
            border          = { 0, 0, 0, 0 }
            stretch         = TRUE
        }
        
	image 
	{
            function        = BOX
            recolorable     = TRUE
            state           = PRELIGHT
            file            = "bottom.png"
            border          = { 0, 0, 0, 0 }
            stretch         = TRUE
            orientation     = HORIZONTAL
        }

        image 
	{
            function        = BOX
            recolorable     = TRUE
            state           = ACTIVE
            file            = "bottom.png"
            border          = { 0, 0, 0, 0 }
            stretch         = TRUE
        }

     image 
      {
	function	= ARROW
	recolorable	= TRUE
	state		= NORMAL
	overlay_file	= "top.png"
	overlay_border	= { 0, 0, 0, 0 }
	overlay_stretch	= FALSE
	arrow_direction	= UP
      }
    image 
      {
	function	= ARROW
	recolorable	= TRUE
	state		= NORMAL
	overlay_file	= "bottom.png"
	overlay_border	= { 0, 0, 0, 0 }
	overlay_stretch	= FALSE
	arrow_direction	= DOWN
      }
    image 
      {
	function	= ARROW
	recolorable	= TRUE
	state		= NORMAL
	overlay_file	= "left.png"
	overlay_border	= { 0, 0, 0, 0 }
	overlay_stretch	= FALSE
	arrow_direction	= LEFT
      }
    image 
      {
	function	= ARROW
	recolorable	= TRUE
	state		= NORMAL
	overlay_file	= "right.png"
	overlay_border	= { 0, 0, 0, 0 }
	overlay_stretch	= FALSE
	arrow_direction	= RIGHT
      }
    image 
      {
	function	= ARROW
	recolorable	= TRUE
	state		= PRELIGHT
	overlay_file	= "top-active.png"
	overlay_border	= { 0, 0, 0, 0 }
	overlay_stretch	= FALSE
	arrow_direction	= UP
      }
    image 
      {
	function	= ARROW
	recolorable	= TRUE
	state		= PRELIGHT
	overlay_file	= "bottom-active.png"
	overlay_border	= { 0, 0, 0, 0 }
	overlay_stretch	= FALSE
	arrow_direction	= DOWN
      }
    image 
      {
	function	= ARROW
	recolorable	= TRUE
	state		= PRELIGHT
	overlay_file	= "left-active.png"
	overlay_border	= { 0, 0, 0, 0 }
	overlay_stretch	= FALSE
	arrow_direction	= LEFT
      }
    image 
      {
	function	= ARROW
	recolorable	= TRUE
	state		= PRELIGHT
	overlay_file	= "right-active.png"
	overlay_border	= { 0, 0, 0, 0 }
	overlay_stretch	= FALSE
	arrow_direction	= RIGHT
      }
    image 
      {
	function	= ARROW
	recolorable	= TRUE
	shadow		= IN
	overlay_file	= "top.png"
	overlay_border	= { 0, 0, 0, 0 }
	overlay_stretch	= FALSE
	arrow_direction	= UP
      }
    image 
      {
	function	= ARROW
	recolorable	= TRUE
	shadow		= IN
	overlay_file	= "bottom.png"
	overlay_border	= { 0, 0, 0, 0 }
	overlay_stretch	= FALSE
	arrow_direction	= DOWN
      }
    image 
      {
	function	= ARROW
	recolorable	= TRUE
	shadow		= IN
	overlay_file	= "left.png"
	overlay_border	= { 0, 0, 0, 0 }
	overlay_stretch	= FALSE
	arrow_direction	= LEFT
      }
    image 
      {
	function	= ARROW
	recolorable	= TRUE
	shadow		= IN
	overlay_file	= "right.png"
	overlay_border	= { 0, 0, 0, 0 }
	overlay_stretch	= FALSE
	arrow_direction	= RIGHT
      }    

}
}

class "GtkScrollbar" style "clearlooks-scrollbar"
